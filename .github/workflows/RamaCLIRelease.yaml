name: Build Rama CLI Releases
on:
  push:
    tags:
      - rama-*
  workflow_dispatch:
    inputs:
      tag:
        description: "Release Tag"
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: stable

jobs:
  build-release-linux:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      fail-fast: true
      matrix:
        target:
          - name: x86_64-unknown-linux-gnu
          - name: aarch64-unknown-linux-gnu
          - name: armv7-unknown-linux-gnueabi
          - name: armv7-unknown-linux-gnueabihf
          - name: arm-unknown-linux-gnueabi
          - name: arm-unknown-linux-gnueabihf
          - name: i686-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
          targets: ${{ matrix.target.name }}

      - uses: Swatinem/rust-cache@v2
        with:
          env-vars: "RUST_TOOLCHAIN=${{env.RUST_TOOLCHAIN}}"

      - name: Install cross
        run: |
          cargo install --git https://github.com/cross-rs/cross --branch main cross

      - name: Build release
        timeout-minutes: 120
        run: |
          cross build --release -p rama-cli --target ${{ matrix.target.name }} --features ${{ matrix.target.features }}

      - name: Package
        run: |
          cd target/${{ matrix.target.name }}/release && tar -cJf rama.${{ matrix.target.name }}.tar.xz rama

      - name: Generate checksums
        run: |
          cd target/${{ matrix.target.name }}/release
          sha256sum rama.${{ matrix.target.name }}.tar.xz > rama.${{ matrix.target.name }}.tar.xz.sha256

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/${{ matrix.target.name }}/release/*.tar.xz
            target/${{ matrix.target.name }}/release/*.sha256
          prerelease: ${{ contains(github.ref_name, '-') }}
          tag_name: ${{ inputs.tag || github.ref_name }}

  build-release-macos:
    runs-on: macos-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      fail-fast: true
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4

      - name: Install GNU tar
        if: runner.os == 'macOS'
        run: |
          brew install gnu-tar
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
          targets: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2
        with:
          env-vars: "RUST_TOOLCHAIN=${{env.RUST_TOOLCHAIN}}"

      - name: Build release
        shell: bash
        run: |
          cargo build --release -p rama-cli --target ${{ matrix.target }}

      - name: Package
        run: |
          cd target/${{ matrix.target }}/release && tar -cJf rama.${{ matrix.target }}.tar.xz rama

      - name: Generate checksums
        run: |
          cd target/${{ matrix.target }}/release
          shasum -a 256 rama.${{ matrix.target }}.tar.xz > rama.${{ matrix.target }}.tar.xz.sha256

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/${{ matrix.target }}/release/*.tar.xz
            target/${{ matrix.target }}/release/*.sha256
          prerelease: ${{ contains(github.ref_name, '-') }}
          tag_name: ${{ inputs.tag || github.ref_name }}

  build-release-windows:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      fail-fast: true
      matrix:
        target:
          - x86_64-pc-windows-gnu
          - i686-pc-windows-gnu
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
          targets: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2
        with:
          env-vars: "RUST_TOOLCHAIN=${{env.RUST_TOOLCHAIN}}"

      - name: Install cross
        run: |
          cargo install --git https://github.com/cross-rs/cross --branch main cross

      - name: Build release
        run: |
          cross build --release -p rama-cli --target ${{ matrix.target }}

      - name: Package
        run: |
          cd target/${{ matrix.target }}/release && tar -cJf rama.${{ matrix.target }}.tar.xz rama.exe

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: target/${{ matrix.target }}/release/*.tar.xz
          prerelease: ${{ contains(github.ref_name, '-') }}
          tag_name: ${{ inputs.tag || github.ref_name }}