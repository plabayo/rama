# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Deploy mdBook site to Pages

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: stable

on:
  # Runs on pushes targeting the default branch
  push:
    # todo: switch back to "main" once mdbook-graphviz is fixed
    # see: https://github.com/dylanowen/mdbook-graphviz/issues/107
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.37
      MDBOOK_GRAPHVIZ_VERSION: 0.1.7
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
      - name: Generate Rust Docs
        env:
          RUSTDOCFLAGS: "-D rustdoc::broken_intra_doc_links"
        run: cargo doc --all-features --no-deps
      - name: Install Graphviz
        run: sudo apt-get install graphviz
      - name: Install mdBook
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook
          cargo install --version ${MDBOOK_GRAPHVIZ_VERSION} mdbook-graphviz
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with mdBook
        working-directory: ./docs/book
        run: mdbook build
      - name: Create artifact
        working-directory: ./docs
        run: |
          mkdir -p www/book
          cp -r book/book/* www/book
          mkdir -p www/docs
          cp -r ../target/doc/* www/docs
          cp index.html www/index.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/www

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
